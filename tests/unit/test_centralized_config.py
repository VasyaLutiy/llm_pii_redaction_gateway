#!/usr/bin/env python3
"""
üß™ –¢–ï–°–¢ –¶–ï–ù–¢–†–ê–õ–ò–ó–û–í–ê–ù–ù–û–ô –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ settings.py —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
"""

import asyncio
import json
import os
from typing import Dict, Any

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import sys
import os
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '../../..'))

from llm_pii_proxy.config.settings import Settings, settings
from llm_pii_proxy.services.llm_service import LLMService
from llm_pii_proxy.providers.azure_provider import AzureOpenAIProvider
from llm_pii_proxy.security.pii_gateway import AsyncPIISecurityGateway
from llm_pii_proxy.core.models import ChatRequest, ChatMessage

async def test_settings_initialization():
    """–¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ settings"""
    print("üß™ –¢–ï–°–¢ 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Settings")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≥–ª–æ–±–∞–ª—å–Ω—ã–π settings —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
        print(f"‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–π settings –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = settings.get_display_config()
        print(f"\nüìã –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
        for key, value in config.items():
            print(f"   {key}: {value}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        required_fields = [
            'azure_openai_endpoint',
            'azure_openai_api_key', 
            'azure_completions_model'
        ]
        
        missing_fields = []
        for field in required_fields:
            if not getattr(settings, field.replace('azure_openai_', 'azure_openai_').replace('azure_completions_', 'azure_completions_')):
                missing_fields.append(field)
        
        if missing_fields:
            print(f"\n‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {missing_fields}")
            return False
        else:
            print(f"\n‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º PII –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        print(f"\nüîí PII –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print(f"   PII –∑–∞—â–∏—Ç–∞ –≤–∫–ª—é—á–µ–Ω–∞: {settings.pii_protection_enabled}")
        print(f"   PII patterns —Ñ–∞–π–ª: {settings.pii_patterns_config_path}")
        print(f"   PII timeout: {settings.pii_session_timeout_minutes} –º–∏–Ω—É—Ç")
        print(f"   Debug —Ä–µ–∂–∏–º: {settings.pii_proxy_debug}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ PII patterns —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if os.path.exists(settings.pii_patterns_config_path):
            print(f"   ‚úÖ PII patterns —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"   ‚ö†Ô∏è PII patterns —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {settings.pii_patterns_config_path}")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ settings: {e}")
        return False

async def test_settings_env_override():
    """–¢–µ—Å—Ç –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("\nüß™ –¢–ï–°–¢ 2: –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ ENV")
    print("=" * 50)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    original_pii_enabled = os.getenv('PII_PROTECTION_ENABLED')
    original_debug = os.getenv('PII_PROXY_DEBUG')
    
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        os.environ['PII_PROTECTION_ENABLED'] = 'true'
        os.environ['PII_PROXY_DEBUG'] = 'true'
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä settings
        test_settings = Settings()
        
        print(f"üìù –¢–µ—Å—Ç–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        print(f"   PII_PROTECTION_ENABLED: {os.getenv('PII_PROTECTION_ENABLED')}")
        print(f"   PII_PROXY_DEBUG: {os.getenv('PII_PROXY_DEBUG')}")
        
        print(f"\nüîç –†–µ–∑—É–ª—å—Ç–∞—Ç –≤ settings:")
        print(f"   pii_protection_enabled: {test_settings.pii_protection_enabled}")
        print(f"   pii_proxy_debug: {test_settings.pii_proxy_debug}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
        success = (
            test_settings.pii_protection_enabled == True and
            test_settings.pii_proxy_debug == True
        )
        
        if success:
            print(f"\n‚úÖ –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ ENV —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print(f"\n‚ùå –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ ENV –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        return success
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ENV –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è: {e}")
        return False
    
    finally:
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        if original_pii_enabled is not None:
            os.environ['PII_PROTECTION_ENABLED'] = original_pii_enabled
        else:
            os.environ.pop('PII_PROTECTION_ENABLED', None)
            
        if original_debug is not None:
            os.environ['PII_PROXY_DEBUG'] = original_debug
        else:
            os.environ.pop('PII_PROXY_DEBUG', None)

async def test_service_integration_with_settings():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ —Å —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""
    print("\nüß™ –¢–ï–°–¢ 3: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤ —Å Settings")
    print("=" * 50)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç settings
        azure_provider = AzureOpenAIProvider()
        pii_gateway = AsyncPIISecurityGateway()
        llm_service = LLMService(azure_provider, pii_gateway)
        
        print(f"‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ AzureProvider –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        print(f"\nüîç AzureProvider –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print(f"   Endpoint: {azure_provider.endpoint}")
        print(f"   Deployment: {azure_provider.deployment_name}")
        print(f"   API Version: {azure_provider.api_version}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ LLMService –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        print(f"\nüîç LLMService –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print(f"   Debug —Ä–µ–∂–∏–º: {llm_service.debug_mode}")
        print(f"   PII –≤–∫–ª—é—á–µ–Ω: {llm_service.pii_enabled}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ settings
        settings_match = (
            azure_provider.endpoint == settings.azure_openai_endpoint and
            azure_provider.deployment_name == settings.azure_completions_model and
            llm_service.debug_mode == settings.pii_proxy_debug and
            llm_service.pii_enabled == settings.pii_protection_enabled
        )
        
        if settings_match:
            print(f"\n‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        else:
            print(f"\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
            print(f"   Azure endpoint: {azure_provider.endpoint} vs {settings.azure_openai_endpoint}")
            print(f"   Azure deployment: {azure_provider.deployment_name} vs {settings.azure_completions_model}")
            print(f"   LLM debug: {llm_service.debug_mode} vs {settings.pii_proxy_debug}")
            print(f"   LLM PII: {llm_service.pii_enabled} vs {settings.pii_protection_enabled}")
        
        return settings_match
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å settings: {e}")
        import traceback
        traceback.print_exc()
        return False

async def test_pii_settings_toggle():
    """–¢–µ—Å—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è PII –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    print("\nüß™ –¢–ï–°–¢ 4: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ PII –Ω–∞—Å—Ç—Ä–æ–µ–∫")
    print("=" * 50)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    original_pii_enabled = os.getenv('PII_PROTECTION_ENABLED')
    
    try:
        # –¢–µ—Å—Ç 1: PII –æ—Ç–∫–ª—é—á–µ–Ω
        os.environ['PII_PROTECTION_ENABLED'] = 'false'
        test_settings_off = Settings()
        
        azure_provider_off = AzureOpenAIProvider()
        pii_gateway_off = AsyncPIISecurityGateway()
        llm_service_off = LLMService(azure_provider_off, pii_gateway_off)
        
        print(f"üî¥ PII –û–¢–ö–õ–Æ–ß–ï–ù:")
        print(f"   Settings PII enabled: {test_settings_off.pii_protection_enabled}")
        print(f"   LLMService PII enabled: {llm_service_off.pii_enabled}")
        
        # –¢–µ—Å—Ç 2: PII –≤–∫–ª—é—á–µ–Ω
        os.environ['PII_PROTECTION_ENABLED'] = 'true'
        test_settings_on = Settings()
        
        azure_provider_on = AzureOpenAIProvider()
        pii_gateway_on = AsyncPIISecurityGateway()
        llm_service_on = LLMService(azure_provider_on, pii_gateway_on)
        
        print(f"\nüü¢ PII –í–ö–õ–Æ–ß–ï–ù:")
        print(f"   Settings PII enabled: {test_settings_on.pii_protection_enabled}")
        print(f"   LLMService PII enabled: {llm_service_on.pii_enabled}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
        success = (
            test_settings_off.pii_protection_enabled == False and
            llm_service_off.pii_enabled == False and
            test_settings_on.pii_protection_enabled == True and
            llm_service_on.pii_enabled == True
        )
        
        if success:
            print(f"\n‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ PII –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print(f"\n‚ùå –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ PII –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        return success
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è PII: {e}")
        return False
    
    finally:
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        if original_pii_enabled is not None:
            os.environ['PII_PROTECTION_ENABLED'] = original_pii_enabled
        else:
            os.environ.pop('PII_PROTECTION_ENABLED', None)

async def test_settings_validation():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    print("\nüß™ –¢–ï–°–¢ 5: –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫")
    print("=" * 50)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    original_api_key = os.getenv('AZURE_OPENAI_API_KEY')
    original_endpoint = os.getenv('AZURE_OPENAI_ENDPOINT')
    
    try:
        # –¢–µ—Å—Ç 1: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π API –∫–ª—é—á
        os.environ.pop('AZURE_OPENAI_API_KEY', None)
        
        try:
            invalid_settings = Settings()
            print(f"‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞ - settings —Å–æ–∑–¥–∞–Ω –±–µ–∑ API –∫–ª—é—á–∞")
            return False
        except Exception as e:
            print(f"‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ä–∞–±–æ—Ç–∞–ª–∞ –¥–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–≥–æ API –∫–ª—é—á–∞: {e}")
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º API –∫–ª—é—á
        if original_api_key:
            os.environ['AZURE_OPENAI_API_KEY'] = original_api_key
        
        # –¢–µ—Å—Ç 2: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π endpoint
        os.environ.pop('AZURE_OPENAI_ENDPOINT', None)
        
        try:
            invalid_settings = Settings()
            print(f"‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞ - settings —Å–æ–∑–¥–∞–Ω –±–µ–∑ endpoint")
            return False
        except Exception as e:
            print(f"‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ä–∞–±–æ—Ç–∞–ª–∞ –¥–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–≥–æ endpoint: {e}")
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º endpoint
        if original_endpoint:
            os.environ['AZURE_OPENAI_ENDPOINT'] = original_endpoint
        
        # –¢–µ—Å—Ç 3: –í–∞–ª–∏–¥–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        try:
            valid_settings = Settings()
            print(f"‚úÖ –í–∞–ª–∏–¥–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∞–ª–∏–¥–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
            return False
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}")
        return False
    
    finally:
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        if original_api_key:
            os.environ['AZURE_OPENAI_API_KEY'] = original_api_key
        if original_endpoint:
            os.environ['AZURE_OPENAI_ENDPOINT'] = original_endpoint

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –¶–ï–ù–¢–†–ê–õ–ò–ó–û–í–ê–ù–ù–û–ô –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò")
    print("=" * 60)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    tests = [
        test_settings_initialization,
        test_settings_env_override,
        test_service_integration_with_settings,
        test_pii_settings_toggle,
        test_settings_validation
    ]
    
    results = []
    for test in tests:
        try:
            result = await test()
            results.append(result)
        except Exception as e:
            print(f"‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω —Å –æ—à–∏–±–∫–æ–π: {e}")
            results.append(False)
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 60)
    
    passed = sum(results)
    total = len(results)
    
    print(f"–ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {passed}/{total}")
    print(f"–£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {passed/total*100:.1f}%")
    
    if passed == total:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("‚úÖ –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´")
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    
    return passed == total

if __name__ == "__main__":
    asyncio.run(main()) 